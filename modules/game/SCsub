#!/usr/bin/env python

Import("env")

env_game = env.Clone()

module_obj = []
if env.debug_features:
    # Need imgui
    env_game.Prepend(CPPPATH=["#modules/imgui/thirdparty/imgui"])
env_game.Prepend(CPPPATH=["#modules/jolt/src"])
env_game.Prepend(CPPPATH=["#modules/jolt/thirdparty/jolt"])
env_game.Prepend(CPPPATH="#modules/jolt/thirdparty/mimalloc/include")

env_game.Prepend(CPPDEFINES=["USINGZ"])
env_game.Prepend(CPPPATH=["#modules/game/thirdparty/clipper2"])

sources = [
    Glob("*.cpp"),
    Glob("animation_system/*.cpp"),
    Glob("animation_system/animation_editor/*.cpp"),
    Glob("fabrik/*.cpp"),
    Glob("npc_brains/*.cpp"),
    Glob("user_config/*.cpp"),
]

thirdparty_obj = []
thirdparty_sources = [
    Glob("thirdparty/clipper_3d/*.cpp"),
    Glob("thirdparty/goap/*.c"),
]

env_thirdparty = env.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env_thirdparty.modules_sources += thirdparty_obj

if ARGUMENTS.get("game_shared", "no") == "yes":
    # Shared lib compilation
    env_game.Append(CCFLAGS=["-fPIC"])
    env_thirdparty.Append(CCFLAGS=["-fPIC"])

    env_game["LIBS"] = []
    env_thirdparty["LIBS"] = []

    shared_lib = env_game.SharedLibrary(target="#bin/game", source=[sources])
    shared_lib_tp = env_thirdparty.StaticLibrary(target="#bin/game_tp", source=[thirdparty_sources])

    env.Append(LIBPATH=["#bin"])
    
    env_game.Append(LIBS=[f"game_tp{env['PROGSUFFIX']}"])
    env_game.Append(LIBPATH=["#bin"])
    env.Append(LIBS=[f"game_tp{env['PROGSUFFIX']}"])
    env.Append(LIBS=[f"game{env['PROGSUFFIX']}"])

else:
    env_game.add_source_files(module_obj, sources)
    env.modules_sources += module_obj

env_game.Depends(module_obj, thirdparty_obj)

SConscript("resources/SCsub")
